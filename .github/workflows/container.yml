name: Container
defaults:
  run:
    shell: bash
on:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  GitlabToken : ${{ secrets.GitlabToken}}
  URL : ${{ secrets.URL}}
  ID : ${{ secrets.ID}}
jobs:
  where:
    runs-on: ubuntu-latest
    container:
      image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
    timeout-minutes: 60
    steps:
      - name: Checkout latest commit
        run: |
          git clone --depth 1 https://${{github.REPOSITORY_OWNER}}:${{ secrets.ACCESS_TOKEN }}@github.com/DavidBlm/MNISTPipeline repo
          cd repo
          ls
      - name: Concatenate training files in their respective directories
        run: |
           cd repo
           find . -type f -name 'train_*' | while read file; do
           dir=$(dirname "$file")
           (cd "$dir" && cat train_* > train.h5)
           echo "Created train.h5 in $dir"
           done
      - name: Build
        run: |
          pwd
          ls
          cd repo
          python3 -m pip install -U pip 
          pip list
  whereManual:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout latest commit
        run: |
          git clone --depth 1 https://${{github.REPOSITORY_OWNER}}:${{ secrets.ACCESS_TOKEN }}@github.com/DavidBlm/MNISTPipeline repo
          cd repo
          ls
      - name: Concatenate training files in their respective directories
        run: |
           cd repo
           find . -type f -name 'train_*' | while read file; do
           dir=$(dirname "$file")
           (cd "$dir" && cat train_* > train.h5)
           echo "Created train.h5 in $dir"
           done
          
      - name: Start Docker Container
        run: |
             docker pull registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
             docker run --network=host --name build-container -d -v $(pwd)/repo:/workspace -e GitlabToken="${{ secrets.GitlabToken }}" -e URL="${{ secrets.URL }}" -e ID="${{ secrets.ID }}" registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1 tail -f /dev/null 
      - name: Build
        env:
          #mvn clean install -Dmaven.wagon.http.retryHandler.count=5
          SCRIPT: |
                  cd /workspace
                  pwd
                  ls
                  cd repo
                  python3 -m pip install -U pip 
                  pip list
        run: docker exec build-container bash -c "$SCRIPT"
  whereDockerRun:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout latest commit
        run: |
          git clone --depth 1 https://${{github.REPOSITORY_OWNER}}:${{ secrets.ACCESS_TOKEN }}@github.com/DavidBlm/MNISTPipeline repo
          cd repo
          ls
      - name: Concatenate training files in their respective directories
        run: |
           cd repo
           find . -type f -name 'train_*' | while read file; do
           dir=$(dirname "$file")
           (cd "$dir" && cat train_* > train.h5)
           echo "Created train.h5 in $dir"
           done
      - uses: addnab/docker-run-action@v3
        with:
          image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
          options: -v ${{ github.workspace }}/repo:/workspace
          run: |
                  cd /workspace
                  pwd
                  ls
                  cd repo
                  python3 -m pip install -U pip 
                  pip list
  TestMNISTwithCustomLayerDockerRun:
      runs-on: ubuntu-latest
      timeout-minutes: 60
      steps:
        - name: Checkout latest commit
          run: |
            git clone --depth 1 https://${{github.REPOSITORY_OWNER}}:${{ secrets.ACCESS_TOKEN }}@github.com/DavidBlm/MNISTPipeline repo
            cd repo
            ls
        - name: Concatenate training files in their respective directories
          run: |
             cd repo
             find . -type f -name 'train_*' | while read file; do
             dir=$(dirname "$file")
             (cd "$dir" && cat train_* > train.h5)
             echo "Created train.h5 in $dir"
             done
        - uses: addnab/docker-run-action@v3
          with:
            image: registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
            options: -v ${{ github.workspace }}/repo:/workspace -e GitlabToken="${{ secrets.GitlabToken }}" -e URL="${{ secrets.URL }}" -e ID="${{ secrets.ID }}"
            run: |
                cd /workspace
                shopt -s expand_aliases
                echo 'alias python='\''/usr/bin/python3'\''' >> ~/.bashrc
                . ~/.bashrc
                cat ~/.bashrc
                echo $PYTHONPATH
                python --version
                python3 --version
                python3 -m pip install numpy h5py
                which python
                which python3
                alias python=/usr/bin/python3
                python --version
                python3 --version
                which python
                type -a python
                mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
                cd mnist-custom-layer
                mvn install:install-file -DgroupId=net.sourceforge -DartifactId=javaml -Dversion=0.1.7 -Dpackaging=jar -Dfile=./javaml-0.1.7.jar
                mvn dependency:resolve emadl:train -s settings.xml
  TestMNISTwithCustomLayerManual:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout latest commit
        run: |
          git clone --depth 1 https://${{github.REPOSITORY_OWNER}}:${{ secrets.ACCESS_TOKEN }}@github.com/DavidBlm/MNISTPipeline repo
          cd repo
          ls
      - name: Concatenate training files in their respective directories
        run: |
           cd repo
           find . -type f -name 'train_*' | while read file; do
           dir=$(dirname "$file")
           (cd "$dir" && cat train_* > train.h5)
           echo "Created train.h5 in $dir"
           done
          
      - name: Start Docker Container
        run: |
             docker pull registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1
             docker run --network=host --name build-container -d -v $(pwd)/repo:/workspace -e GitlabToken="${{ secrets.GitlabToken }}" -e URL="${{ secrets.URL }}" -e ID="${{ secrets.ID }}" registry.git.rwth-aachen.de/monticore/embeddedmontiarc/generators/emadl2cpp/dockerimages/mxnet170:v0.0.1 tail -f /dev/null 
      - name: Build
        env:
          #mvn clean install -Dmaven.wagon.http.retryHandler.count=5
          SCRIPT: |
                cd /workspace
                shopt -s expand_aliases
                echo 'alias python='\''/usr/bin/python3'\''' >> ~/.bashrc
                . ~/.bashrc
                cat ~/.bashrc
                echo $PYTHONPATH
                python --version
                python3 --version
                python3 -m pip install numpy h5py
                which python
                which python3
                alias python=/usr/bin/python3
                python --version
                python3 --version
                which python
                type -a python
                mv /mxnet/build/libmxnet.so /mxnet/build/libmxnet.a /usr/lib/
                cd mnist-custom-layer
                mvn install:install-file -DgroupId=net.sourceforge -DartifactId=javaml -Dversion=0.1.7 -Dpackaging=jar -Dfile=./javaml-0.1.7.jar
                mvn dependency:resolve emadl:train -s settings.xml
        run: docker exec build-container bash -c "$SCRIPT"
